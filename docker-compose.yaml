version: "3.9"
services:
  postgres:
    container_name: postgres-db
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=socialdb
    healthcheck:
      test: ["CMD", "pg_isready"]
    ports:
      - "20241:5432"
    volumes:
      - data-volume:/var/lib/postgresql/data
  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - "6379:6379"
  rabitmq:
    container_name: rabitmq
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - "15677:15672"
      - "5677:5672"
  dynamodb:
    container_name: dynamodb
    image: amazon/dynamodb-local
    ports:
      - "8000:8000"
    command: "-jar DynamoDBLocal.jar -sharedDb"
  user-app:
    container_name: user-app
    build:
      context: .
      dockerfile: /docker/user/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - DB_SOURCE=postgresql://postgres:postgres@postgres:5432/socialdb?sslmode=disable
    depends_on:
      - postgres
    entrypoint: [ "/app/wait-for.sh", "postgres:5432", "--", "/app/start.sh"]
    command: [ "/app/main" ]
  ticket-app:
    container_name: ticket-app
    build:
      context: .
      dockerfile: /docker/ticket/Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - postgres
  event-app:
    container_name: event-app
    build:
      context: .
      dockerfile: /docker/event/Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - postgres
  crawler-app:
    container_name: crawler-app
    build:
      context: .
      dockerfile: /docker/crawler/Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - postgres
    volumes:
      - data-volume:/app/data/crawler/data
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    container_name: grafana
    network_mode: "bridge"
    depends_on:
      - prometheus
      - prometheus-pushgateway
  prometheus:
    image: prom/prometheus     
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./misc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    container_name: prometheus
    network_mode: "bridge"
  prometheus-pushgateway:
    image: prom/pushgateway
    container_name: pushgateway
    expose:
      - 9091
    ports:
      - "9091:9091"
volumes:
  data-volume:
