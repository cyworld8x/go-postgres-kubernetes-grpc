apiVersion: v1
kind: Service
metadata:
  name: user-app-service  # Name of the service
  labels:
    app: app
spec:
  selector:
    app: app
  ports:
    - protocol: TCP
      port: 8080 #  port for incoming traffic
      targetPort: 8080 # Port on which the application is running Service‘s pods
      name: http-server
    - protocol: TCP
      port: 8081
      targetPort: 8081
      name: grpc-server
    - protocol: TCP
      port: 8082
      targetPort: 8082
      name: ticket-server
    - protocol: TCP
      port: 8083
      targetPort: 8083
      name: event-server
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: crawler-app-service  # Name of the service
  labels:
    app: crawler-app
spec:
  selector:
    app: crawler-app
  ports:
    - protocol: TCP
      port: 8084 #  port for incoming traffic
      targetPort: 8084 # Port on which the application is running Service‘s pods
      name: http-server
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service  # Name of the service
  labels:
    app: redis
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
      name: redis-server
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service  # Name of the service
  labels:
    app: postgres
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 20241
      targetPort: 5432
      name: postgres-server
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: rabitmq-service  # Name of the service
  labels:
    app: rabitmq
spec:
  selector:
    app: rabitmq
  ports:
    - protocol: TCP
      port: 15678
      targetPort: 15672
      name: rabitmq-management
    - protocol: TCP
      port: 5678
      targetPort: 5672
      name: rabitmq-server
  type: NodePort