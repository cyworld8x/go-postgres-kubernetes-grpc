name: Deploy Go App to EC2

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.22' # Specify your Go version

      - name: Build
        run: go build -o cmd/user/user-api  cmd/user/main.go # Adjust the output name if needed
      - name: Debug Secrets
        run: |
          echo "EC2 Host: ${{ secrets.EC2_HOST }}"
          echo "EC2 User: ${{ secrets.EC2_USER }}"
          echo "Private Key Starts: $(echo "${{ secrets.EC2_PRIVATE_KEY }}" | head -n 2)"
          echo "Private Key Ends: $(echo "${{ secrets.EC2_PRIVATE_KEY }}" | tail -n 2)"
      - name: SSH Deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            echo "Starting deployment..."
            APP_NAME=user-api
            REMOTE_DIR=/home/${{ secrets.EC2_USER }}/app

            ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "mkdir -p $REMOTE_DIR"

            scp $APP_NAME ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:$REMOTE_DIR/$APP_NAME/cmd/user/config

            scp cmd/user/$APP_NAME ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:$REMOTE_DIR/$APP_NAME

            scp cmd/user/config/app.env ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:$REMOTE_DIR/$APP_NAME/cmd/user/config/app.env

            # Example: Stop any running instance and then start the new one
            ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "pkill -f $APP_NAME && nohup $REMOTE_DIR/$APP_NAME &"

            echo "Deployment complete!"
