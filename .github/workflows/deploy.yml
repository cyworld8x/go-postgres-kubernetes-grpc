name: Deploy Go App to EC2 (with systemd)

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '>=1.22'

    - name: Build Go application
      run: |
        go build -o cmd/user/user-api cmd/user/main.go

    - name: SSH Deploy
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.AWS_EC2_HOST }}
        username: ${{ secrets.AWS_EC2_USER }}
        key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
        port: 22
        script: |
          echo "Deploying to EC2 (using systemd)..."

          # Stop the current service
          sudo systemctl stop api.service || true # Ignore if it's not running

          # Create the target directory
          sudo mkdir -p ${{ secrets.EC2_SOURCE_USER_API_FOLDER_PATH }}
          sudo mkdir -p ${{ secrets.EC2_SOURCE_USER_API_FOLDER_PATH }}/cmd/user/config
          sudo chown $USER:$USER ${{ secrets.EC2_SOURCE_USER_API_FOLDER_PATH }}

          # Copy the new binary
          scp -o StrictHostKeyChecking=no $GITHUB_WORKSPACE/cmd/user/user-api ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }}:${{ secrets.EC2_SOURCE_USER_API_FOLDER_PATH}}/
          scp -o StrictHostKeyChecking=no $GITHUB_WORKSPACE/cmd/user/config/app.env ${{ secrets.AWS_EC2_USER }}@${{ secrets.AWS_EC2_HOST }}:${{ secrets.EC2_SOURCE_USER_API_FOLDER_PATH}}/

          echo "Binary copied to EC2"

          # Update the systemd configuration
          sudo systemctl daemon-reload

          # Start the new service
          sudo systemctl start api.service

          echo "Application started via systemd"

          # Optionally, check the status
          sudo systemctl status api.service
