name: Deploy Go App to EC2 (Build on EC2)

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: SSH and Build on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            echo "Starting deployment..."
            APP_NAME=user-api
            REMOTE_REPO_DIR=/home/${{ secrets.EC2_USER }}/source # Directory to clone the repo
            REMOTE_BUILD_DIR=/home/${{ secrets.EC2_USER }}/build # Directory to build
            REMOTE_APP_DIR=/opt/app     # Directory to run the app
            GITHUB_REPOSITORY=https://github.com/cyworld8x/go-postgres-kubernetes-grpc.git

            # Ensure remote directories exist
            sudo scp -rfv $REMOTE_BUILD_DIR
            sudo scp -rfv $REMOTE_APP_DIR
            mkdir -p $REMOTE_REPO_DIR
            mkdir -p $REMOTE_BUILD_DIR/cmd/user/config
            mkdir -p $REMOTE_APP_DIR/cmd/user/config

            # Clone the repository (or pull if it exists)
            if [ -d "$REMOTE_REPO_DIR/.git" ]; then
              echo "Repository already exists, pulling latest changes..."
              cd $REMOTE_REPO_DIR
              git pull origin main
            else
              echo "Cloning repository..."
              git clone --depth 1 $GITHUB_REPOSITORY $REMOTE_REPO_DIR
            fi

            # Build the application
            echo "Building the application..."
            cd $REMOTE_REPO_DIR/cmd/user
            go build -o $REMOTE_BUILD_DIR/$APP_NAME $REMOTE_REPO_DIR/cmd/user
            
            cp $REMOTE_REPO_DIR/cmd/user/config/app.env $REMOTE_BUILD_DIR/cmd/user/config

             # --- Setup Systemd Service ---
            SERVICE_NAME=$APP_NAME.service
            SERVICE_FILE=/etc/systemd/system/$SERVICE_NAME

            echo "Creating systemd service file: $SERVICE_FILE"
            sudo tee $SERVICE_FILE > /dev/null <<EOF
            [Unit]
            Description=Go User API Service
            After=network.target

            [Service]
            User=${{ secrets.EC2_USER }}
            WorkingDirectory=$REMOTE_APP_DIR
            ExecStart=$REMOTE_APP_DIR/$APP_NAME
            Restart=on-failure
            RestartSec=5
            StandardOutput=journal
            StandardError=journal
            SyslogIdentifier=$APP_NAME

            [Install]
            WantedBy=multi-user.target
            EOF

            echo "Stopping and starting the application..."
            sudo systemctl stop $SERVICE_NAME

            sudo scp -r $REMOTE_BUILD_DIR/ $REMOTE_APP_DIR 
            echo "Reloading systemd daemon..."
            sudo systemctl daemon-reload

            echo "Enabling and starting the service: $SERVICE_NAME"
            sudo systemctl enable $SERVICE_NAME
            sudo systemctl start $SERVICE_NAME

            echo "Checking service status..."
            sudo systemctl status $SERVICE_NAME --no-pager # --no-pager prevents pagination

            echo "Deployment complete!"
